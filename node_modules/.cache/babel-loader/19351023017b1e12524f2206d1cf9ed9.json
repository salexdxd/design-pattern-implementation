{"ast":null,"code":"var Position;\n\n(function (Position) {\n  Position[\"Backend\"] = \"Backend\";\n  Position[\"Frontend\"] = \"Frontend\";\n  Position[\"Fullstack\"] = \"Fullstack\";\n})(Position || (Position = {}));\n\nvar Seniority;\n\n(function (Seniority) {\n  Seniority[\"Junior\"] = \"Junior\";\n  Seniority[\"Medior\"] = \"Medior\";\n  Seniority[\"Senior\"] = \"Senior\";\n})(Seniority || (Seniority = {}));\n\nclass BackendDeveloper {\n  constructor() {\n    this.name = \"Backend Developer 1\";\n  }\n\n  getPosition() {\n    return Position.Backend;\n  }\n\n  getSeniority() {\n    return Seniority.Junior;\n  }\n\n}\n\nclass FrontendDeveloper {\n  constructor() {\n    this.name = \"Frontend Developer 2\";\n  }\n\n  getPosition() {\n    return Position.Frontend;\n  }\n\n  getSeniority() {\n    return Seniority.Junior;\n  }\n\n}\n\nclass FullstackDeveloper {\n  constructor() {\n    this.name = \"Fullstack Developer 3\";\n  }\n\n  getPosition() {\n    return Position.Fullstack;\n  }\n\n  getSeniority() {\n    return Seniority.Junior;\n  }\n\n}\n\nclass OrganizationFactory {\n  constructor(organizationName) {\n    this.organizationName = organizationName;\n    this.developers = [];\n    this.organizationName = organizationName;\n  }\n\n  getOrganizationName() {\n    return this.organizationName;\n  }\n\n  addDevelopers(developersList) {\n    this.developers = this.developers.concat(developersList);\n  }\n\n  findDeveloper(name) {\n    return this.developers.find(dev => dev.name === name);\n  }\n\n}\n\nconst myFactory = new OrganizationFactory(\"Prodyna\");\nmyFactory.addDevelopers([new BackendDeveloper(), new FrontendDeveloper(), new FullstackDeveloper()]);\nconsole.log(myFactory);\nconsole.log(myFactory.findDeveloper(\"Fullstack Developer 3\"));\nconsole.log(\"bokser\");\nexport {};","map":{"version":3,"names":["Position","Seniority","BackendDeveloper","name","getPosition","Backend","getSeniority","Junior","FrontendDeveloper","Frontend","FullstackDeveloper","Fullstack","OrganizationFactory","constructor","organizationName","developers","getOrganizationName","addDevelopers","developersList","concat","findDeveloper","find","dev","myFactory","console","log"],"sources":["C:/Users/amastilovic/Desktop/NOTES/week5/day2 - design patterns/react-design-patterns/factory/factory-pattern/src/factory.ts"],"sourcesContent":["enum Position {\r\n    Backend = \"Backend\",\r\n    Frontend = \"Frontend\",\r\n    Fullstack = \"Fullstack\"\r\n}\r\n\r\nenum Seniority {\r\n    Junior = \"Junior\",\r\n    Medior = \"Medior\",\r\n    Senior = \"Senior\"\r\n}\r\n\r\ninterface ImplDeveloper {\r\n    getPosition(): Position;\r\n    getSeniority(): Seniority;\r\n    name: string;\r\n}\r\n\r\n\r\nclass BackendDeveloper implements ImplDeveloper {\r\n    getPosition(): Position {\r\n        return Position.Backend;\r\n    }\r\n    getSeniority(): Seniority {\r\n        return Seniority.Junior\r\n    }\r\n    name: string = \"Backend Developer 1\";\r\n    \r\n}\r\n\r\nclass FrontendDeveloper implements ImplDeveloper {\r\n    getPosition(): Position {\r\n        return Position.Frontend;\r\n    }\r\n    getSeniority(): Seniority {\r\n        return Seniority.Junior\r\n    }\r\n    name: string = \"Frontend Developer 2\";\r\n    \r\n}\r\n\r\nclass FullstackDeveloper implements ImplDeveloper {\r\n    getPosition(): Position {\r\n        return Position.Fullstack;\r\n    }\r\n    getSeniority(): Seniority {\r\n        return Seniority.Junior\r\n    }\r\n    name: string = \"Fullstack Developer 3\";\r\n\r\n    \r\n}\r\n\r\n\r\nclass OrganizationFactory {\r\n    private developers: ImplDeveloper[] = [];\r\n\r\n    constructor(private organizationName:string){\r\n        this.organizationName=organizationName;\r\n    }\r\n\r\n    public getOrganizationName(): string {\r\n        return this.organizationName;\r\n    }\r\n\r\n    addDevelopers(developersList: ImplDeveloper[]){\r\n        this.developers = this.developers.concat(developersList)\r\n    }\r\n\r\n    findDeveloper(name:string){\r\n        return this.developers.find(dev=> dev.name===name)\r\n    }\r\n}\r\n\r\nconst myFactory = new OrganizationFactory(\"Prodyna\");\r\n\r\nmyFactory.addDevelopers([new BackendDeveloper(), new FrontendDeveloper(), new FullstackDeveloper()])\r\n\r\nconsole.log(myFactory);\r\nconsole.log(myFactory.findDeveloper(\"Fullstack Developer 3\"));\r\n\r\n\r\n\r\n\r\n\r\nconsole.log(\"bokser\")\r\n\r\n\r\n\r\n\r\nexport {};"],"mappings":"IAAKA,Q;;WAAAA,Q;EAAAA,Q;EAAAA,Q;EAAAA,Q;GAAAA,Q,KAAAA,Q;;IAMAC,S;;WAAAA,S;EAAAA,S;EAAAA,S;EAAAA,S;GAAAA,S,KAAAA,S;;AAaL,MAAMC,gBAAN,CAAgD;EAAA;IAAA,KAO5CC,IAP4C,GAO7B,qBAP6B;EAAA;;EAC5CC,WAAW,GAAa;IACpB,OAAOJ,QAAQ,CAACK,OAAhB;EACH;;EACDC,YAAY,GAAc;IACtB,OAAOL,SAAS,CAACM,MAAjB;EACH;;AAN2C;;AAWhD,MAAMC,iBAAN,CAAiD;EAAA;IAAA,KAO7CL,IAP6C,GAO9B,sBAP8B;EAAA;;EAC7CC,WAAW,GAAa;IACpB,OAAOJ,QAAQ,CAACS,QAAhB;EACH;;EACDH,YAAY,GAAc;IACtB,OAAOL,SAAS,CAACM,MAAjB;EACH;;AAN4C;;AAWjD,MAAMG,kBAAN,CAAkD;EAAA;IAAA,KAO9CP,IAP8C,GAO/B,uBAP+B;EAAA;;EAC9CC,WAAW,GAAa;IACpB,OAAOJ,QAAQ,CAACW,SAAhB;EACH;;EACDL,YAAY,GAAc;IACtB,OAAOL,SAAS,CAACM,MAAjB;EACH;;AAN6C;;AAalD,MAAMK,mBAAN,CAA0B;EAGtBC,WAAW,CAASC,gBAAT,EAAiC;IAAA,KAAxBA,gBAAwB,GAAxBA,gBAAwB;IAAA,KAFpCC,UAEoC,GAFN,EAEM;IACxC,KAAKD,gBAAL,GAAsBA,gBAAtB;EACH;;EAEME,mBAAmB,GAAW;IACjC,OAAO,KAAKF,gBAAZ;EACH;;EAEDG,aAAa,CAACC,cAAD,EAAiC;IAC1C,KAAKH,UAAL,GAAkB,KAAKA,UAAL,CAAgBI,MAAhB,CAAuBD,cAAvB,CAAlB;EACH;;EAEDE,aAAa,CAACjB,IAAD,EAAa;IACtB,OAAO,KAAKY,UAAL,CAAgBM,IAAhB,CAAqBC,GAAG,IAAGA,GAAG,CAACnB,IAAJ,KAAWA,IAAtC,CAAP;EACH;;AAjBqB;;AAoB1B,MAAMoB,SAAS,GAAG,IAAIX,mBAAJ,CAAwB,SAAxB,CAAlB;AAEAW,SAAS,CAACN,aAAV,CAAwB,CAAC,IAAIf,gBAAJ,EAAD,EAAyB,IAAIM,iBAAJ,EAAzB,EAAkD,IAAIE,kBAAJ,EAAlD,CAAxB;AAEAc,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACH,aAAV,CAAwB,uBAAxB,CAAZ;AAMAI,OAAO,CAACC,GAAR,CAAY,QAAZ;AAKA"},"metadata":{},"sourceType":"module"}